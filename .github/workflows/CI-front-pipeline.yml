name: i6 CI frontend pipeline

# main 브랜치에 push나 pull request 발생 시 이 workflow가 실행
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    # Ubuntu OS에서 실행
    runs-on: ubuntu-latest

    steps:
      # 코드 가져오기
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # 전체 Git 기록을 가져옵니다. (커밋 푸시를 위해 필요)

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Docker Hub에 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Docker 이미지 빌드 및 푸시
      - name: Build docker image and push
        uses: docker/build-push-action@v2
        with:
          context: ./front/healthcare
          file: ./front/healthcare/Dockerfile
          platforms: linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKER_REPOSITORY_FRONTEND }}:latest
            ${{ secrets.DOCKER_REPOSITORY_FRONTEND }}:${{ github.sha }}

      # 푸시된 Docker 이미지를 Pull하여 검증
      - name: Verify Frontend Docker Hub
        run: docker pull --platform linux/arm64 ${{ secrets.DOCKER_REPOSITORY_FRONTEND }}:${{ github.sha }}

      # kustomization.yaml 파일에서 이미지 태그 업데이트
      - name: Update image tag in kustomization.yaml
        run: |
          sed -i "s/PLACEHOLDER_TAG/${{ github.sha }}/g" kubernetes/kustomization.yaml

      # 변경된 파일을 커밋하고 푸시
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore: update image tag to ${{ github.sha }}"
          file_pattern: kubernetes/kustomization.yaml
          branch: ${{ github.ref }}
          commit_user_name: GitHub Actions
          commit_user_email: actions@github.com
